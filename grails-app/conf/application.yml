---
grails:
    profile: web
    codegen:
        defaultPackage: uk.co.metadataconsulting.sentinel
    gorm:
        reactor:
            # Whether to translate GORM events into Reactor events
            # Disabled by default for performance reasons
            events: false
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false

# Spring Actuator Endpoints are Disabled by Default
endpoints:
    enabled: false
    jmx:
        enabled: true
server:
  port: 8090

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml

    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
        upload:
            maxFileSize: 26214400
            maxRequestSize: 26214400
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
endpoints:
    jmx:
        unique-names: true
---
grails:
    plugin:
        springsecurity:
            providerNames:
                - 'mdxAuthenticationProvider'
                - 'anonymousAuthenticationProvider'
            securityConfigType: InterceptUrlMap
            interceptUrlMap:
                -
                    pattern: /
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /error
                    access:
                        - permitAll
                -
                    pattern: /index
                    access:
                        - permitAll
                -
                    pattern: /index.gsp
                    access:
                        - permitAll
                -
                    pattern: /shutdown
                    access:
                        - permitAll
                -
                    pattern: /assets/**
                    access:
                        - permitAll
                -
                    pattern: /**/js/**
                    access:
                        - permitAll
                -
                    pattern: /**/css/**
                    access:
                        - permitAll
                -
                    pattern: /**/images/**
                    access:
                        - permitAll
                -
                    pattern: /**/favicon.ico
                    access:
                        - permitAll
                -
                    pattern: /login/**
                    access:
                        - 'permitAll'
                -
                    pattern: /logout/**
                    access:
                        - 'permitAll'
                -
                    pattern: '/logout/**'
                    access:
                        - 'permitAll'
                -
                    pattern: /recordCollection/cloneMapping
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /recordCollection/edit
                    access:
                        - 'isAuthenticated()'
                -
                  pattern: /recordCollection/update
                  access:
                      - 'isAuthenticated()'
                  httpMethod: POST
                -
                    pattern: /recordCollection/cloneSave
                    access:
                        - 'isAuthenticated()'
                    httpMethod: POST
                -
                    pattern: /recordCollection/validate
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /recordCollection/export
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /recordCollection/delete
                    access:
                        - 'isAuthenticated()'
                    httpMethod: POST
                -
                    pattern: /recordCollection/*/mapping
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /recordCollectionMapping/*/save
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /recordCollectionMapping/catalogueElements/*
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /recordCollectionMapping/update
                    access:
                        - 'isAuthenticated()'
                    httpMethod: POST
                -
                    pattern: /import
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /upload
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /validationTask/index
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /importForNewValidationTask
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /uploadForNewValidationTask
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /fetch/mdxSearch
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /records/*
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /record/index
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /record/*
                    access:
                        - 'isAuthenticated()'
                -
                    pattern: /record/validate
                    access:
                        - 'isAuthenticated()'
                    httpMethod: POST
                -
                    pattern: /records/*/*
                    access:
                        - 'isAuthenticated()'
            filterChain:
                chainMap:
                   -
                       pattern: /assets/**
                       filters: none
                   -
                       pattern: /**/js/**
                       filters: none
                   -
                       pattern: /**/css/**
                       filters: none
                   -
                       pattern: /**/images/**
                       filters: none
                   -
                       pattern: /**/favicon.ico
                       filters: none
                   -
                       pattern: /**
                       filters: JOINED_FILTERS
---
hibernate:
    cache:
        queries: false
        use_second_level_cache: false
        use_query_cache: false
dataSource:
    pooled: true
    jmxExport: true
    driverClassName: '${JDBC_DRIVER}'
    dialect: '${JDBC_DIALECT}'
    username: '${JDBC_USERNAME}'
    password: '${JDBC_PASSWORD}'
environments:
    development:
        dataSource:
            dbCreate: update
            url: '${JDBC_CONNECTION_STRING}'
    test:
        dataSource:
            dbCreate: create-drop
            url: '${JDBC_CONNECTION_STRING}'            
    production:
        dataSource:
            dbCreate: none
            url: '${JDBC_CONNECTION_STRING}'
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
---
metadata:
    url: '${METADATA_URL}'
---
grails:
    plugins:
        awssdk:
            s3:
                region: '${S3_REGION}'
                bucket: '${S3_BUCKET}'